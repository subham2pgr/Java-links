The most important link is below
https://codesjava.com/multithreading-in-java/

https://cs-fundamentals.com/tech-interview/java/why-does-main-method-have-to-be-static.php
https://www.geeksforgeeks.org/coupling-in-java/

https://www.geeksforgeeks.org/g-fact-79/
https://www.geeksforgeeks.org/overloading-in-java/



https://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/

https://www.geeksforgeeks.org/overriding-in-java/


https://www.geeksforgeeks.org/can-override-private-methods-java/

https://www.geeksforgeeks.org/covariant-return-types-java/
https://www.geeksforgeeks.org/overriding-in-java/

https://www.geeksforgeeks.org/can-override-private-methods-java/

https://www.geeksforgeeks.org/covariant-return-types-java/


https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/

https://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/

https://www.tutorialspoint.com/java8/java8_default_methods.htm


https://www.baeldung.com/java-marker-interfaces

https://www.geeksforgeeks.org/marker-interface-java/

https://www.geeksforgeeks.org/g-fact-32-user-defined-custom-exception-in-java/

https://www.geeksforgeeks.org/throw-throws-java/


https://www.geeksforgeeks.org/difference-between-throw-and-throws-in-java/


https://www.geeksforgeeks.org/joining-threads-in-java/
https://javaconceptoftheday.com/difference-between-shallow-copy-vs-deep-copy-in-java/
